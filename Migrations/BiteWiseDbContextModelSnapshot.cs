// <auto-generated />
using System;
using BiteWiseWeb2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BiteWiseWeb2.Migrations
{
    [DbContext(typeof(BiteWiseDbContext))]
    partial class BiteWiseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BiteWiseWeb2.Models.DailySummary", b =>
                {
                    b.Property<int>("SummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("summary_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SummaryId"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<decimal?>("NetCalories")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("net_calories");

                    b.Property<decimal?>("TotalCaloriesBurned")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("total_calories_burned");

                    b.Property<decimal?>("TotalCaloriesConsumed")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("total_calories_consumed");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("SummaryId")
                        .HasName("PK__DailySum__85F93E834A617B96");

                    b.HasIndex("UserId");

                    b.ToTable("DailySummary", (string)null);
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("exercise_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseId"));

                    b.Property<decimal>("CaloriesBurnedPerMin")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("calories_burned_per_min");

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("category");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("ExerciseId")
                        .HasName("PK__Exercise__C121418E7CE45E86");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("food_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodId"));

                    b.Property<int>("Calories")
                        .HasColumnType("int")
                        .HasColumnName("calories");

                    b.Property<decimal?>("Carbs")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("carbs");

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("category");

                    b.Property<decimal?>("Fats")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("fats");

                    b.Property<decimal?>("Fiber")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("fiber");

                    b.Property<short?>("IsLocal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0)
                        .HasColumnName("is_local");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<decimal?>("Protein")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("protein");

                    b.Property<string>("ServingSize")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("serving_size");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("FoodId")
                        .HasName("PK__Food__2F4C4DD89BE1A308");

                    b.HasIndex("UserId");

                    b.ToTable("Food", (string)null);
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.FoodLog", b =>
                {
                    b.Property<int>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("Record_Id");

                    b.Property<int>("CalsConsumed")
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasColumnName("Cals_Consumed")
                        .IsFixedLength();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("Food_name")
                        .IsFixedLength();

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasKey("RecordId");

                    b.HasIndex("UserId");

                    b.ToTable("FoodLog", (string)null);
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.Goal", b =>
                {
                    b.Property<int>("GoalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("goal_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GoalId"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<decimal?>("DailyCaloricTarget")
                        .HasColumnType("decimal(10, 0)")
                        .HasColumnName("daily_caloric_target");

                    b.Property<decimal?>("TargetWeight")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("target_weight");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<decimal?>("WeeklyWeightChangeGoal")
                        .HasColumnType("decimal(10, 0)")
                        .HasColumnName("weekly_weight_change_goal");

                    b.HasKey("GoalId")
                        .HasName("PK__Goals__76679A248525153B");

                    b.HasIndex("UserId");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.JamaicanRecipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("recipe_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeId"));

                    b.Property<decimal?>("CaloriesPerServing")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("calories_per_serving");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Ingredients")
                        .HasColumnType("text")
                        .HasColumnName("ingredients");

                    b.Property<string>("Instructions")
                        .HasColumnType("text")
                        .HasColumnName("instructions");

                    b.Property<string>("Recipename")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("recipename");

                    b.HasKey("RecipeId")
                        .HasName("PK__Jamaican__3571ED9B0052AF7E");

                    b.ToTable("JamaicanRecipes");
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.Meal", b =>
                {
                    b.Property<int>("MealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("meal_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealId"));

                    b.Property<DateTime?>("ConsumedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("consumed_at");

                    b.Property<int?>("FoodId")
                        .HasColumnType("int")
                        .HasColumnName("food_id");

                    b.Property<string>("MealType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("meal_type");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("quantity");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("MealId")
                        .HasName("PK__Meals__2910B00F234F698A");

                    b.HasIndex("FoodId");

                    b.HasIndex("UserId");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("ActivityLevel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("activity_level");

                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("gender");

                    b.Property<string>("Goal")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("goal");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("height");

                    b.Property<short?>("LockStatus")
                        .HasColumnType("smallint")
                        .HasColumnName("lockStatus");

                    b.Property<int?>("LoginAttempts")
                        .HasColumnType("int")
                        .HasColumnName("Login_Attempts");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    //b.Property<string>("PasswordHash")
                    //    .IsRequired()
                    //    .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("weight");

                    b.HasKey("UserId")
                        .HasName("PK__Users__B9BE370F9D8A29D4");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__AB6E61648C1A38CF")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.UserInfoDetail", b =>
                {
                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Height")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<byte[]>("ProfilePicture")
                        .HasMaxLength(50)
                        .HasColumnType("binary(50)")
                        .HasColumnName("Profile Picture")
                        .IsFixedLength();

                    b.Property<string>("UserGoal")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("User Goal");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User ID");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(5, 2)");

                    b.ToTable((string)null);

                    b.ToView("User_info_Details", (string)null);
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.UserMeasurement", b =>
                {
                    b.Property<int>("MeasurementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("measurement_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeasurementId"));

                    b.Property<decimal?>("ArmSize")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("arm_size");

                    b.Property<decimal?>("ChestSize")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("chest_size");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<decimal?>("HipSize")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("hip_size");

                    b.Property<decimal?>("LegSize")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("leg_size");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<decimal?>("WaistSize")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("waist_size");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("weight");

                    b.HasKey("MeasurementId")
                        .HasName("PK__UserMeas__E3D1E1C14B2B2C89");

                    b.HasIndex("UserId");

                    b.ToTable("UserMeasurements");
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.UserPicture", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_Id");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("image");

                    b.HasKey("UserId")
                        .HasName("PK__User_Pic__B9BF332771FDF7D5");

                    b.ToTable("User_Picture", (string)null);
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.UserPreference", b =>
                {
                    b.Property<int>("PreferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("preference_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PreferenceId"));

                    b.Property<string>("Allergies")
                        .HasColumnType("text")
                        .HasColumnName("allergies");

                    b.Property<string>("DietType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("diet_type");

                    b.Property<string>("DislikedFoods")
                        .HasColumnType("text")
                        .HasColumnName("disliked_foods");

                    b.Property<string>("PreferredFoods")
                        .HasColumnType("text")
                        .HasColumnName("preferred_foods");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("PreferenceId")
                        .HasName("PK__UserPref__FB41DBCF8F8F81C7");

                    b.HasIndex("UserId");

                    b.ToTable("UserPreferences");
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.UserWorkLog", b =>
                {
                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("category");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<decimal?>("Duration")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("duration");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Exercise Name");

                    b.Property<decimal?>("TotalCaloriesBurnt")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("Total Calories Burnt");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("User Name");

                    b.ToTable((string)null);

                    b.ToView("User_Work_log", (string)null);
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.WorkoutLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("log_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<decimal?>("CaloriesBurned")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("calories_burned");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<decimal?>("Duration")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("duration");

                    b.Property<int?>("ExerciseId")
                        .HasColumnType("int")
                        .HasColumnName("exercise_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("LogId")
                        .HasName("PK__WorkoutL__9E2397E0167BE287");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("UserId");

                    b.ToTable("WorkoutLogs");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    //b.Property<string>("PasswordHash")
                    //    .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.DailySummary", b =>
                {
                    b.HasOne("BiteWiseWeb2.Models.User", "User")
                        .WithMany("DailySummaries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__DailySumm__user___4BAC3F29");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.Food", b =>
                {
                    b.HasOne("BiteWiseWeb2.Models.User", "User")
                        .WithMany("Foods")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Food_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.FoodLog", b =>
                {
                    b.HasOne("BiteWiseWeb2.Models.User", "User")
                        .WithMany("FoodLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FoodLog_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.Goal", b =>
                {
                    b.HasOne("BiteWiseWeb2.Models.User", "User")
                        .WithMany("Goals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Goals__user_id__4E88ABD4");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.Meal", b =>
                {
                    b.HasOne("BiteWiseWeb2.Models.Food", "Food")
                        .WithMany("Meals")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Meals__food_id__4316F928");

                    b.HasOne("BiteWiseWeb2.Models.User", "User")
                        .WithMany("Meals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Meals__user_id__4222D4EF");

                    b.Navigation("Food");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.UserMeasurement", b =>
                {
                    b.HasOne("BiteWiseWeb2.Models.User", "User")
                        .WithMany("UserMeasurements")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__UserMeasu__user___3C69FB99");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.UserPicture", b =>
                {
                    b.HasOne("BiteWiseWeb2.Models.User", "User")
                        .WithOne("UserPicture")
                        .HasForeignKey("BiteWiseWeb2.Models.UserPicture", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_User_Picture_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.UserPreference", b =>
                {
                    b.HasOne("BiteWiseWeb2.Models.User", "User")
                        .WithMany("UserPreferences")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__UserPrefe__user___534D60F1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.WorkoutLog", b =>
                {
                    b.HasOne("BiteWiseWeb2.Models.Exercise", "Exercise")
                        .WithMany("WorkoutLogs")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__WorkoutLo__exerc__48CFD27E");

                    b.HasOne("BiteWiseWeb2.Models.User", "User")
                        .WithMany("WorkoutLogs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_WorkoutLogs_Users");

                    b.Navigation("Exercise");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.Exercise", b =>
                {
                    b.Navigation("WorkoutLogs");
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.Food", b =>
                {
                    b.Navigation("Meals");
                });

            modelBuilder.Entity("BiteWiseWeb2.Models.User", b =>
                {
                    b.Navigation("DailySummaries");

                    b.Navigation("FoodLogs");

                    b.Navigation("Foods");

                    b.Navigation("Goals");

                    b.Navigation("Meals");

                    b.Navigation("UserMeasurements");

                    b.Navigation("UserPicture");

                    b.Navigation("UserPreferences");

                    b.Navigation("WorkoutLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
